{"ast":null,"code":"var _jsxFileName = \"/Users/kalinramsey/Projects/ColorContrastChecker/chromagraph/src/Contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({\n  theme: \"dark\",\n  toggleTheme: () => {}\n});\nexport const ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(localStorage.getItem(\"ui.theme\") || \"dark\");\n  const toggleTheme = () => {\n    const val = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(val);\n    localStorage.setItem(\"ui.theme\", val);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleDarkMode\n    },\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"text-dark-shade bg-light dark:text-light-accent dark:bg-dark\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeContextProvider, \"PWk15z6fVYa2wkpMGCZp1E3KC+8=\");\n_c = ThemeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","ThemeContext","theme","toggleTheme","ThemeContextProvider","children","_s","setTheme","localStorage","getItem","val","setItem","Provider","value","toggleDarkMode","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kalinramsey/Projects/ColorContrastChecker/chromagraph/src/Contexts/ThemeContext.tsx"],"sourcesContent":["import React, { ReactNode, createContext, useEffect, useState } from \"react\";\n\ntype ThemeContextType = {\n  theme: \"light\" | \"dark\";\n  toggleTheme: () => void;\n}\n\nexport const ThemeContext = createContext<ThemeContextType | undefined>({\n  theme: \"dark\",\n  toggleTheme: () => {},\n});\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContextProvider = ({ children }: ThemeProviderProps) => {\n  const [theme, setTheme] = useState<\"light\" | \"dark\">(\n    (localStorage.getItem(\"ui.theme\") as \"light\" | \"dark\") || \"dark\"\n  );\n\n  const toggleTheme = ():void => {\n    const val = theme === \"light\" ? \"dark\" : \"light\";\n    setTheme(val);\n    localStorage.setItem(\"ui.theme\", val);\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        toggleDarkMode,\n      }}>\n      <main className=\"text-dark-shade bg-light dark:text-light-accent dark:bg-dark\">\n        {children}\n      </main>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,aAAa,EAAaC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO7E,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,CAA+B;EACtEK,KAAK,EAAE,MAAM;EACbC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAMF,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAA6B,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGT,QAAQ,CAC/BU,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,IAAyB,MAC5D,CAAC;EAED,MAAMN,WAAW,GAAGA,CAAA,KAAW;IAC7B,MAAMO,GAAG,GAAGR,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO;IAChDK,QAAQ,CAACG,GAAG,CAAC;IACbF,YAAY,CAACG,OAAO,CAAC,UAAU,EAAED,GAAG,CAAC;EACvC,CAAC;EAED,oBACEV,OAAA,CAACC,YAAY,CAACW,QAAQ;IACpBC,KAAK,EAAE;MACLX,KAAK;MACLY;IACF,CAAE;IAAAT,QAAA,eACFL,OAAA;MAAMe,SAAS,EAAC,8DAA8D;MAAAV,QAAA,EAC3EA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE5B,CAAC;AAACb,EAAA,CAtBWF,oBAAoB;AAAAgB,EAAA,GAApBhB,oBAAoB;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}