{"ast":null,"code":"var _jsxFileName = \"/Users/kalinramsey/Projects/ColorContrastChecker/chromagraph/src/Contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext({\n  theme: \"dark\",\n  toggleTheme: () => {}\n});\nexport const ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState(localStorage.getItem(\"theme\") || \"dark\");\n  const toggleTheme = () => {\n    console.log('toggle theme...');\n    console.log('current theme: ', theme);\n    if (theme === 'light') {\n      setTheme('dark');\n      localStorage.theme = 'dark';\n    }\n    if (theme === 'dark') {\n      setTheme('light');\n      localStorage.theme = 'light';\n    }\n    console.log('theme is now: ', theme);\n  };\n  useEffect(() => {\n    console.log('theme changed! theme is now: ', theme);\n    console.log();\n  }, [theme]);\n  useEffect(() => {\n    if (localStorage.theme === 'dark' || !('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark').matches) {\n      document.documentElement.classList.add('dark');\n      setTheme('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n      setTheme('light');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeContextProvider, \"fCJYOnGpF62wMm66fk/2tgM4H7c=\");\n_c = ThemeContextProvider;\nexport default ThemeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","theme","toggleTheme","ThemeContextProvider","children","_s","setTheme","localStorage","getItem","console","log","window","matchMedia","matches","document","documentElement","classList","add","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kalinramsey/Projects/ColorContrastChecker/chromagraph/src/Contexts/ThemeContext.tsx"],"sourcesContent":["import React, { ReactNode, createContext, useEffect, useState } from \"react\";\n\ntype ThemeContextType = {\n  theme: \"light\" | \"dark\";\n  toggleTheme: () => void;\n}\n\nexport const ThemeContext = createContext<ThemeContextType | undefined>({\n  theme: \"dark\",\n  toggleTheme: () => {},\n});\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContextProvider = ({ children }: ThemeProviderProps) => {\n  const [theme, setTheme] = useState<\"light\" | \"dark\">(\n    (localStorage.getItem(\"theme\") as \"light\" | \"dark\") || \"dark\"\n  );\n\n  const toggleTheme = ():void => {\n    console.log('toggle theme...');\n    console.log('current theme: ', theme);\n\n    if (theme === 'light') {\n      setTheme('dark')\n      localStorage.theme = 'dark'\n    }\n    if (theme === 'dark') {\n      setTheme('light')\n      localStorage.theme = 'light'\n    }\n    console.log('theme is now: ', theme)\n  };\n\n  useEffect(() => {\n    console.log('theme changed! theme is now: ', theme)\n    console.log()\n  }, [theme])\n\n  useEffect(() => {\n    if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark').matches)){\n      document.documentElement.classList.add('dark')\n      setTheme('dark')\n    } else {\n      document.documentElement.classList.remove('dark')\n      setTheme('light')\n    }\n  }, [])\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        theme,\n        toggleTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport default ThemeContextProvider;"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO7E,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAA+B;EACtEM,KAAK,EAAE,MAAM;EACbC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;AAMF,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAA6B,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACJ,KAAK,EAAEK,QAAQ,CAAC,GAAGT,QAAQ,CAC/BU,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAyB,MACzD,CAAC;EAED,MAAMN,WAAW,GAAGA,CAAA,KAAW;IAC7BO,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9BD,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAET,KAAK,CAAC;IAErC,IAAIA,KAAK,KAAK,OAAO,EAAE;MACrBK,QAAQ,CAAC,MAAM,CAAC;MAChBC,YAAY,CAACN,KAAK,GAAG,MAAM;IAC7B;IACA,IAAIA,KAAK,KAAK,MAAM,EAAE;MACpBK,QAAQ,CAAC,OAAO,CAAC;MACjBC,YAAY,CAACN,KAAK,GAAG,OAAO;IAC9B;IACAQ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAET,KAAK,CAAC;EACtC,CAAC;EAEDL,SAAS,CAAC,MAAM;IACda,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAET,KAAK,CAAC;IACnDQ,OAAO,CAACC,GAAG,CAAC,CAAC;EACf,CAAC,EAAE,CAACT,KAAK,CAAC,CAAC;EAEXL,SAAS,CAAC,MAAM;IACd,IAAIW,YAAY,CAACN,KAAK,KAAK,MAAM,IAAK,EAAE,OAAO,IAAIM,YAAY,CAAC,IAAII,MAAM,CAACC,UAAU,CAAC,6BAA6B,CAAC,CAACC,OAAQ,EAAC;MAC5HC,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CX,QAAQ,CAAC,MAAM,CAAC;IAClB,CAAC,MAAM;MACLQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACjDZ,QAAQ,CAAC,OAAO,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEP,OAAA,CAACC,YAAY,CAACmB,QAAQ;IACpBC,KAAK,EAAE;MACLnB,KAAK;MACLC;IACF,CAAE;IAAAE,QAAA,EAEDA;EAAQ;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACnB,EAAA,CA7CWF,oBAAoB;AAAAsB,EAAA,GAApBtB,oBAAoB;AA+CjC,eAAeA,oBAAoB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}