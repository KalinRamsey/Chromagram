{"ast":null,"code":"var _jsxFileName = \"/Users/kalinramsey/Projects/ColorContrastChecker/chromagraph/src/Contexts/ThemeContext.tsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext(undefined);\nexport const ThemeContextProvider = ({\n  children\n}) => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    console.log('Setting initial theme:');\n    if (localStorage.theme === \"dark\" || !(\"theme\" in localStorage) && window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      setDarkMode(true);\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      setDarkMode(false);\n      document.documentElement.classList.remove(\"dark\");\n    }\n    console.log(darkMode ? 'dark' : 'light');\n  }, []);\n  const toggleDarkMode = () => {\n    if (darkMode) {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.theme = \"light\";\n      setDarkMode(false);\n    } else {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.theme = \"dark\";\n      setDarkMode(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleDarkMode\n    },\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"text-dark-shade bg-light dark:text-light-accent dark:bg-dark\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeContextProvider, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = ThemeContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeContextProvider\");","map":{"version":3,"names":["React","createContext","useEffect","useState","jsxDEV","_jsxDEV","ThemeContext","undefined","ThemeContextProvider","children","_s","darkMode","setDarkMode","console","log","localStorage","theme","window","matchMedia","matches","document","documentElement","classList","add","remove","toggleDarkMode","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kalinramsey/Projects/ColorContrastChecker/chromagraph/src/Contexts/ThemeContext.tsx"],"sourcesContent":["import React, { ReactNode, createContext, useEffect, useState } from \"react\";\n\ninterface ThemeContextType {\n  darkMode: boolean;\n  toggleDarkMode: () => void\n}\n\nexport const ThemeContext = createContext<ThemeContextType>(undefined);\n\ninterface ThemeProviderProps {\n  children: ReactNode;\n}\n\nexport const ThemeContextProvider = ({ children }: ThemeProviderProps) => {\n  const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    console.log('Setting initial theme:')\n    if (\n      localStorage.theme === \"dark\" ||\n      (!(\"theme\" in localStorage) &&\n        window.matchMedia(\"(prefers-color-scheme: dark)\").matches)\n    ) {\n      setDarkMode(true);\n      document.documentElement.classList.add(\"dark\");\n    } else {\n      setDarkMode(false);\n      document.documentElement.classList.remove(\"dark\");\n    }\n    console.log(darkMode ? 'dark' : 'light')\n  }, []);\n\n  const toggleDarkMode = () => {\n    if (darkMode) {\n      document.documentElement.classList.remove(\"dark\");\n      localStorage.theme = \"light\";\n      setDarkMode(false);\n    } else {\n      document.documentElement.classList.add(\"dark\");\n      localStorage.theme = \"dark\";\n      setDarkMode(true);\n    }\n  };\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        darkMode,\n        toggleDarkMode,\n      }}>\n      <main className=\"text-dark-shade bg-light dark:text-light-accent dark:bg-dark\">\n        {children}\n      </main>\n    </ThemeContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAeC,aAAa,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO7E,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAmBM,SAAS,CAAC;AAMtE,OAAO,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC;AAA6B,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAE/CD,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrC,IACEC,YAAY,CAACC,KAAK,KAAK,MAAM,IAC5B,EAAE,OAAO,IAAID,YAAY,CAAC,IACzBE,MAAM,CAACC,UAAU,CAAC,8BAA8B,CAAC,CAACC,OAAQ,EAC5D;MACAP,WAAW,CAAC,IAAI,CAAC;MACjBQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;IAChD,CAAC,MAAM;MACLX,WAAW,CAAC,KAAK,CAAC;MAClBQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;IACnD;IACAX,OAAO,CAACC,GAAG,CAACH,QAAQ,GAAG,MAAM,GAAG,OAAO,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAId,QAAQ,EAAE;MACZS,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACE,MAAM,CAAC,MAAM,CAAC;MACjDT,YAAY,CAACC,KAAK,GAAG,OAAO;MAC5BJ,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,MAAM;MACLQ,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAC9CR,YAAY,CAACC,KAAK,GAAG,MAAM;MAC3BJ,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,YAAY,CAACoB,QAAQ;IACpBC,KAAK,EAAE;MACLhB,QAAQ;MACRc;IACF,CAAE;IAAAhB,QAAA,eACFJ,OAAA;MAAMuB,SAAS,EAAC,8DAA8D;MAAAnB,QAAA,EAC3EA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACc,CAAC;AAE5B,CAAC;AAACtB,EAAA,CA1CWF,oBAAoB;AAAAyB,EAAA,GAApBzB,oBAAoB;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}